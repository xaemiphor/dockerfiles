on:
  push:

jobs:
  identify:
    name: Find changed folders
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    outputs:
      changed: "${{ steps.changed.outputs.changed }}"
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Identify changed folders
        id: changed
        uses: './gha-changed'
        env:
          changed_root: ${{ github.workspace }}
  build:
    name: Build containers
    needs: identify
    runs-on: ubuntu-latest
    if: ${{ needs.identify.outputs.changed != '[]' && needs.identify.outputs.changed != '' }}
    strategy:
      fail-fast: false
      matrix:
        folder: ${{ fromJSON(needs.identify.outputs.changed) }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request' && steps.vars.outputs.SKIP != 'true'
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY || 'ghcr.io' }}
          username: ${{ secrets.DOCKER_USER || github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}

      - name: vars
        id: vars
        shell: bash
        run: |
          VERSION=$(awk -F'=' '/^#VERSION=/{print $NF}' "${{ matrix.folder }}/Dockerfile")
          PLATFORMS=$(awk -F'=' '/^#PLATFORMS=/{print $NF}' "${{ matrix.folder }}/Dockerfile")
          echo "VERSION=${VERSION}" | tee -a "${GITHUB_OUTPUT}"
          if [[ -n "${PLATFORMS}" ]]; then
            echo "PLATFORMS=${PLATFORMS}" | tee -a "${GITHUB_OUTPUT}"
          fi
          if skopeo inspect "docker://${{ vars.REGISTRY }}/${{ vars.NAMESPACE || github.actor }}/${{ matrix.folder }}:${VERSION}" > /dev/null 2>&1; then
            echo "SKIP=true" | tee -a "${GITHUB_OUTPUT}"
          fi

      - name: Generate metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ vars.REGISTRY }}/${{ vars.NAMESPACE || github.actor }}/${{ matrix.folder }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ steps.vars.outputs.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.vars.outputs.VERSION }}
            type=semver,pattern={{major}},value=${{ steps.vars.outputs.VERSION }}
            type=ref,event=branch
            type=sha

      - name: Build and push Docker image
        if: steps.vars.outputs.SKIP != 'true'
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.folder }}
          file: ${{ matrix.folder }}/Dockerfile
          push: true
          platforms: ${{ steps.vars.outputs.PLATFORMS || 'linux/amd64' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
